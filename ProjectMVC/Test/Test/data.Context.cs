//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TourDLEntities : DbContext
    {
        public TourDLEntities()
            : base("name=TourDLEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Booking> Booking { get; set; }
        public virtual DbSet<Contact> Contact { get; set; }
        public virtual DbSet<CTTour> CTTour { get; set; }
        public virtual DbSet<DiaDiemDL> DiaDiemDL { get; set; }
        public virtual DbSet<KhachHang> KhachHang { get; set; }
        public virtual DbSet<KhachSan> KhachSan { get; set; }
        public virtual DbSet<LichTrinh> LichTrinh { get; set; }
        public virtual DbSet<LoaiPhuongTien> LoaiPhuongTien { get; set; }
        public virtual DbSet<LoaiTour> LoaiTour { get; set; }
        public virtual DbSet<Media> Media { get; set; }
        public virtual DbSet<NhanVien> NhanVien { get; set; }
        public virtual DbSet<PhuongTien> PhuongTien { get; set; }
        public virtual DbSet<Slide> Slide { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tour> Tour { get; set; }
    
        public virtual ObjectResult<childtk_Result> childtk(string bd, string kt, string timkiem)
        {
            var bdParameter = bd != null ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(string));
    
            var ktParameter = kt != null ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(string));
    
            var timkiemParameter = timkiem != null ?
                new ObjectParameter("timkiem", timkiem) :
                new ObjectParameter("timkiem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<childtk_Result>("childtk", bdParameter, ktParameter, timkiemParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> sumtongdt(string bd, string kt)
        {
            var bdParameter = bd != null ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(string));
    
            var ktParameter = kt != null ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sumtongdt", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<timbooktheotentime_Result> timbooktheotentime(string bd, string kt, string timkiem)
        {
            var bdParameter = bd != null ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(string));
    
            var ktParameter = kt != null ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(string));
    
            var timkiemParameter = timkiem != null ?
                new ObjectParameter("timkiem", timkiem) :
                new ObjectParameter("timkiem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<timbooktheotentime_Result>("timbooktheotentime", bdParameter, ktParameter, timkiemParameter);
        }
    
        public virtual ObjectResult<toptourdatmax_Result> toptourdatmax(string bd, string kt)
        {
            var bdParameter = bd != null ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(string));
    
            var ktParameter = kt != null ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<toptourdatmax_Result>("toptourdatmax", bdParameter, ktParameter);
        }
    }
}
